a) 2 commits were performed to the master branch of the forl repository after completing step 8
b) The .gitignore was added 4 years ago and the last commit was done on jan 24, 2017
c) git log- The git log command displays committed snapshots. It lets you list the project history, filter it, and search for specific changes. While git status lets you inspect the working directory and the staging area, git log only operates on the committed history.
git status - The git status command displays the state of the working directory and the staging area. It lets you see which changes have been staged, which haven’t, and which files aren’t being tracked by Git. Status output does not show you any information regarding the committed project history.
d) Unstaged changes exist in your working directory, but Git hasn’t recorded them into its version history yet. You’ll usually want to stage them (mark them to become part of your next commit) or discard them by restoring the last committed version of the file.
Untracked - This file exists locally, but isn’t a part of the Git repository. The file’s change history will not be recorded and it will not be pushed to remote copies of your repository when you run git push. Unless they’ve been added to an ignore list, untracked files will show up when viewing your Git status.
e) git reset is specifically about updating the index, moving the HEAD.
git checkout is about updating the working tree (to the index or the specified tree). It will update the HEAD only if you checkout a branch (if not, you end up with a detached HEAD).
(actually, with Git 2.23 Q3 2019, this will be git restore, not necessarily git checkout)
f) It doesn't let you go ahead with it. It is important to commit your local changes in order to pull. The error it gives you "cannot pull as your working directory has uncommitted changes"
